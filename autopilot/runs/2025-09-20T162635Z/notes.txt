Run 2025-09-20T162635Z — reduce entropy (0.12→0.06); policy quality regressed

Config
- Device/topology: mps; vec 28/56, env 4×8, bptt 16
- Train: lr 2.5e-3, ent_coef 0.06 (prev 0.12), total_timesteps 20M
- Derived batch: 4×8×56×16 = 28,672; minibatch = batch = max_minibatch
- Divisibility: vec.num_envs % vec.num_workers = 56 % 28 = 0 (ok)

Key metrics (trainer_summary.json)
- success_rate: 0.000 (down from 9.38 @0.12 and ~1.26e3 @0.01)
- mean_reward: 139.37 (down from 250.57 @0.12 and 481.55–474.92 @0.01)
- collision_rate: 0.00196 (low; similar/slightly better than prior)
- episode_length: 490.08
- SPS: 135.10K (↑ vs prior 126.67K)
- agent_steps: 20.93M, epoch: 698

Observations
- Lowering entropy from 0.12 → 0.06 further hurt success_rate and reward, despite slightly higher throughput (SPS).
- Trend across recent runs:
  • 0.01 ent_coef (lr 0.002–0.0025): highest success (~1.25e3) and reward (~475–497).
  • 0.12 ent_coef: large drop (success ~9.38, reward ~250.6).
  • 0.06 ent_coef: collapsed (success 0.0, reward ~139.4), though collisions remained very low.
- UI utilisation panel hovered ~357% CPU with 0% VRAM; concurrency preset remains known‑good (vec 28/56, env 4×8).

Theory
- Excess entropy regularisation drove persistent exploration and prevented policy consolidation; halving to 0.06 remained too high for this task.
- Best prior run used lower lr (0.002) and ent_coef 0.01; returning to that regime should restore success while preserving stability.

Next step (staged in proposals/next_config.json)
- Revert ent_coef → 0.01; lower lr → 0.002; keep bptt=16 and concurrency (28/56, 4×8).
- Warm‑start from best checkpoint to accelerate recovery: resume_mode=continue, resume_from=best, save_strategy=best.
- Expect success_rate and mean_reward to rebound; monitor collision_rate, SPS, and CPU utilisation. If success plateaus, consider anneal_lr=true or small vf_coef/clip_coef sweeps.

Repro notes
- Baseline invariants satisfied: divisibility and derived batch sizes consistent.
- Command: autopilot/scripts/run_training.sh (full baseline).
